import express from 'express';
import { ParsedQs } from 'qs';
export declare class ValidationError extends Error {
    status: number;
    code: string;
    key: string | null;
    constructor(status: number, code: string, key: string | null, message: string);
}
declare type BaseType = 'null' | 'string' | 'array' | 'boolean' | 'number' | 'integer' | 'object';
declare type TypeSpec = BaseType | `?${BaseType}` | RegExp | readonly TypeSpec[];
export declare function checkKey(value: unknown, type: TypeSpec): boolean;
interface ValidateOptions {
    accept?: string;
}
interface QueryTypes {
    'string': string;
    'array': unknown[];
    'boolean': '1' | '' | undefined;
    'number': string;
    'integer': string;
    'object': object;
}
interface BodyTypes {
    'null': null;
    'string': string;
    'array': unknown[];
    'boolean': boolean | '1' | '' | undefined;
    'number': number | string;
    'integer': number | string;
    'object': object;
}
declare type ValidatedQueryType<Key> = Key extends RegExp ? string : Key extends `?${infer SubKey}` ? ValidatedQueryType<SubKey> | '' | undefined : Key extends Array<infer SubKey> ? ValidatedQueryType<SubKey> : Key extends keyof QueryTypes ? QueryTypes[Key] : unknown;
declare type ValidatedQuery<Keys> = {
    [K in keyof Keys]: ValidatedQueryType<Keys[K]>;
} & ParsedQs;
declare type ValidatedBodyType<Key> = Key extends RegExp ? string : Key extends `?${infer SubKey}` ? ValidatedBodyType<SubKey> | '' | undefined : Key extends Array<infer SubKey> ? ValidatedBodyType<SubKey> : Key extends keyof BodyTypes ? BodyTypes[Key] : unknown;
declare type ValidatedBody<Keys> = {
    [K in keyof Keys]: ValidatedBodyType<Keys[K]>;
} & Record<string, unknown>;
export declare function validateGET<ResBody, ReqBody, Locals, Keys extends Record<string, TypeSpec>>(keys: Keys, options?: {
    json?: boolean;
}): (req: express.Request<any, ResBody, ReqBody, ValidatedQuery<Keys>>, res: express.Response<ResBody, Locals>, next: express.NextFunction) => void;
export declare function validatePOST<ResBody, Query extends ParsedQs, Locals, Keys extends Record<string, TypeSpec>>(keys: Keys, options?: ValidateOptions): (req: express.Request<any, ResBody, ValidatedBody<Keys>, Query>, res: express.Response<ResBody, Locals>, next: express.NextFunction) => void;
export {};
